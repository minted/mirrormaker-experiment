[2020-01-30 17:03:41,809] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-01-30 17:03:41,811] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-01-30 17:03:41,811] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-01-30 17:04:32,523] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-01-30 17:04:32,523] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-01-30 17:04:32,523] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2020-01-30 17:04:32,526] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2020-01-30 17:04:33,765] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-01-30 17:04:33,765] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-01-30 17:04:33,766] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-01-30 17:04:33,766] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-01-30 17:04:33,766] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-01-30 17:04:33,767] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-01-30 17:04:33,768] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-01-30 17:04:33,768] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-01-30 17:04:33,768] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-01-30 17:04:33,768] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-01-30 17:04:33,769] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-01-30 17:10:25,061] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-01-30 17:11:07,877] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-01-30 17:12:15,367] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-01-30 17:13:24,235] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-01-30 17:14:14,622] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-01-30 17:14:14,639] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-01-30 17:14:14,640] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2020-01-30 17:14:14,643] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-01-30 17:14:14,646] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-01-30 17:14:14,647] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2020-01-30 17:14:14,675] INFO [Controller id=2] Initialized broker epochs cache: Map(2 -> 24) (kafka.controller.KafkaController)
[2020-01-30 17:14:14,678] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2020-01-30 17:14:14,682] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-01-30 17:14:14,688] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-01-30 17:14:14,688] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2020-01-30 17:14:14,688] INFO [Controller id=2] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-01-30 17:14:14,689] INFO [Controller id=2] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-01-30 17:14:14,690] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-01-30 17:14:14,692] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-01-30 17:14:14,693] INFO [Controller id=2] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-01-30 17:14:14,693] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-01-30 17:14:14,694] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-01-30 17:14:14,694] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2020-01-30 17:14:14,702] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-01-30 17:14:14,703] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-01-30 17:14:14,708] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-01-30 17:14:14,708] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-01-30 17:14:14,709] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-01-30 17:14:14,709] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-01-30 17:14:14,709] INFO [RequestSendThread controllerId=2] Controller 2 connected to 10.10.80.81:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-01-30 17:14:14,713] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-01-30 17:14:14,713] INFO [Controller id=2] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-01-30 17:14:14,717] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-01-30 17:14:14,718] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-01-30 17:14:14,718] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-01-30 17:14:14,718] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-01-30 17:14:14,719] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-01-30 17:14:14,728] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-01-30 17:14:19,732] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-01-30 17:14:19,732] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-01-30 17:14:19,741] DEBUG [Controller id=2] Preferred replicas by broker Map() (kafka.controller.KafkaController)
